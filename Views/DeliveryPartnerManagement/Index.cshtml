@model List<Foodie.Models.DeliveryPartner.DeliveryPartnerListViewModel>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Delivery Partner Management";
}


<!-- Custom Styles for Enhanced Admin Interface -->
<style>
    /* Core layout improvements */
    .partner-container {
        padding: 1.5rem;
        background-color: #f8f9fc;
    }

    .page-header {
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e3e6f0;
    }

    /* Card styling */
    .card {
        border: none;
        border-radius: 0.75rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        margin-bottom: 1.5rem;
        transition: transform 0.2s, box-shadow 0.2s;
    }

        .card:hover {
            box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.2);
        }

    .card-header {
        background-color: #fff;
        border-bottom: 1px solid #e3e6f0;
        padding: 1.25rem 1.5rem;
        font-weight: 700;
        border-top-left-radius: 0.75rem !important;
        border-top-right-radius: 0.75rem !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-body {
        padding: 0;
    }

    /* Table enhancements */
    .partner-table {
        margin-bottom: 0;
    }

        .partner-table thead th {
            background-color: #f8f9fc;
            color: #4e73df;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.05em;
            border-bottom: 2px solid #e3e6f0;
            padding: 1rem;
            vertical-align: middle;
        }

        .partner-table tbody tr {
            transition: background-color 0.2s;
        }

            .partner-table tbody tr:hover {
                background-color: rgba(78, 115, 223, 0.05);
                transform: none;
            }

        .partner-table td {
            padding: 1rem;
            vertical-align: middle;
            border-top: 1px solid #e3e6f0;
            font-size: 0.9rem;
            color: #5a5c69;
        }

    /* Status badges */
    .badge {
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.5rem 0.75rem;
        border-radius: 30px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        min-width: 90px;
    }

    .badge-active {
        background: linear-gradient(45deg, #36b9cc 0%, #1cc88a 100%);
        color: #fff;
    }

    .badge-pending {
        background: linear-gradient(45deg, #f6c23e 0%, #fd7e14 100%);
        color: #fff;
    }

    .badge-suspended {
        background: linear-gradient(45deg, #e74a3b 0%, #dc3545 100%);
        color: #fff;
    }

    .badge-inactive {
        background: linear-gradient(45deg, #858796 0%, #6c757d 100%);
        color: #fff;
    }

    /* Avatar styling */
    .avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        margin-right: 0.75rem;
    }

    /* Action buttons */
    .btn-action {
        border-radius: 50px;
        padding: 0.4rem 0.85rem;
        font-size: 0.75rem;
        font-weight: 600;
        box-shadow: 0 2px 4px rgba(0,0,0,0.08);
        margin: 0 0.25rem;
        display: inline-flex;
        align-items: center;
        transition: all 0.2s;
        border: none;
    }

    .btn-profile {
        background: linear-gradient(45deg, #4e73df 0%, #224abe 100%);
        color: white;
    }

        .btn-profile:hover {
            background: linear-gradient(45deg, #224abe 0%, #4e73df 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(78, 115, 223, 0.25);
            color: white;
        }

    .btn-approve {
        background: linear-gradient(45deg, #1cc88a 0%, #12855f 100%);
        color: white;
    }

        .btn-approve:hover {
            background: linear-gradient(45deg, #12855f 0%, #1cc88a 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(28, 200, 138, 0.25);
            color: white;
        }

    .btn-reject {
        background: linear-gradient(45deg, #e74a3b 0%, #b52a1b 100%);
        color: white;
    }

        .btn-reject:hover {
            background: linear-gradient(45deg, #b52a1b 0%, #e74a3b 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(231, 74, 59, 0.25);
            color: white;
        }

    /* Status indicator dot */
    .status-indicator {
        height: 10px;
        width: 10px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 8px;
    }

    .bg-active {
        background-color: #1cc88a;
    }

    .bg-pending {
        background-color: #f6c23e;
    }

    .bg-suspended {
        background-color: #e74a3b;
    }

    .bg-inactive {
        background-color: #858796;
    }

    /* Search and filters */
    .search-input {
        border-radius: 50px;
        padding: 0.6rem 1.2rem;
        border: 1px solid #e3e6f0;
        box-shadow: 0 2px 4px rgba(0,0,0,0.04);
        transition: all 0.3s;
    }

        .search-input:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    .filter-dropdown {
        border-radius: 50px;
        border: 1px solid #e3e6f0;
        padding: 0.6rem 1.2rem;
        color: #6e707e;
        background-color: #fff;
        transition: all 0.3s;
    }

        .filter-dropdown:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    /* Summary cards */
    .summary-card {
        border-radius: 0.75rem;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        border: none;
        margin-bottom: 1.5rem;
    }

        .summary-card .card-body {
            padding: 1.25rem;
        }

    .summary-icon {
        font-size: 2rem;
        opacity: 0.4;
    }

    .summary-title {
        font-size: 0.7rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        margin-bottom: 0.5rem;
    }

    .summary-value {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 0;
        color: #5a5c69;
    }

    /* Pagination styling */
    .pagination {
        margin-bottom: 0;
    }

    .page-link {
        color: #4e73df;
        border: 1px solid #e3e6f0;
        margin: 0 3px;
        border-radius: 5px;
        padding: 0.5rem 0.75rem;
        transition: all 0.2s;
    }

        .page-link:hover {
            background-color: #4e73df;
            color: #fff;
            border-color: #4e73df;
        }

    .page-item.active .page-link {
        background-color: #4e73df;
        border-color: #4e73df;
    }

    /* Loading animation */
    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        border-radius: 0.75rem;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s, visibility 0.3s;
    }

    .spinner {
        width: 3rem;
        height: 3rem;
        border-width: 0.25rem;
    }

    /* Animations */
    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .fade-in {
        animation: fadeIn 0.4s ease-out forwards;
    }

    .fade-in-1 {
        animation-delay: 0.1s;
    }

    .fade-in-2 {
        animation-delay: 0.2s;
    }

    .fade-in-3 {
        animation-delay: 0.3s;
    }

    .fade-in-4 {
        animation-delay: 0.4s;
    }

    /* Clean scrollbar */
    ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    ::-webkit-scrollbar-thumb {
        background: #c2c7d0;
        border-radius: 10px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background: #a8aeb9;
        }

    /* Responsive adjustments */
    @@media (max-width: 991.98px) {
        .partner-table

    {
        width: 100%;
        overflow-x: auto;
    }

    .btn-action {
        padding: 0.3rem 0.6rem;
        font-size: 0.7rem;
        margin: 0.1rem;
    }

    }
</style>

<div class="partner-container fade-in">
    <!-- Page Header -->
    <div class="page-header d-sm-flex align-items-center justify-content-between mb-4 fade-in fade-in-1">
        
        @* <div>
            <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-profile shadow-sm mr-2">
                <i class="fas fa-download fa-sm text-white-50 mr-1"></i> Generate Report
            </a>
            <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-approve shadow-sm">
                <i class="fas fa-plus fa-sm text-white-50 mr-1"></i> Add New Partner
            </a>
        </div> *@
    </div>

    <!-- Summary Cards Row -->
    <div class="row fade-in fade-in-2">
        <!-- Total Partners Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card summary-card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="summary-title text-primary">Total Partners</div>
                            <div class="summary-value">@Model.Count</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users summary-icon text-primary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Active Partners Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card summary-card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="summary-title text-success">Active Partners</div>
                            <div class="summary-value">@Model.Count(p => p.Status == "Active")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle summary-icon text-success"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Approvals Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card summary-card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="summary-title text-warning">Pending Approvals</div>
                            <div class="summary-value">@Model.Count(p => p.Status == "Pending")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock summary-icon text-warning"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Suspended Partners Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card summary-card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="summary-title text-danger">Suspended</div>
                            <div class="summary-value">@Model.Count(p => p.Status == "Suspended")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-ban summary-icon text-danger"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Partners List Card -->
    <div class="card shadow mb-4 fade-in fade-in-3" id="partnersCard">
        <!-- Loading Overlay -->
        <div class="loading-overlay" id="loadingOverlay">
            <div class="spinner-border text-primary spinner" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>

        <!-- Card Header - Search and Filters -->
        <div class="card-header">
            <h6 class="m-0 font-weight-bold text-primary">Delivery Partners</h6>
            <div class="d-flex align-items-center">
                <div class="input-group mr-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text bg-transparent border-right-0">
                            <i class="fas fa-search text-primary"></i>
                        </span>
                    </div>
                    <input type="text" class="form-control search-input border-left-0" id="searchPartner" placeholder="Search partners...">
                </div>
                <select class="form-control filter-dropdown mr-2" id="statusFilter">
                    <option value="all">All Status</option>
                    <option value="Active">Active</option>
                    <option value="Pending">Pending</option>
                    <option value="Suspended">Suspended</option>
                </select>
                <div class="dropdown">
                    <button class="btn btn-sm btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-sliders-h text-primary"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuButton">
                        <div class="dropdown-header">View Options:</div>
                        <a class="dropdown-item" href="#"><i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>List View</a>
                        <a class="dropdown-item" href="#"><i class="fas fa-th-large fa-sm fa-fw mr-2 text-gray-400"></i>Grid View</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#"><i class="fas fa-file-export fa-sm fa-fw mr-2 text-gray-400"></i>Export Data</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card Body - Partners Table -->
        <div class="card-body">
            <div class="table-responsive">
                <table class="table partner-table" id="partnerTable">
                    <thead>
                        <tr>
                            <th class="text-center">#ID</th>
                            <th>Partner Name</th>
                            <th>Contact Info</th>
                            <th class="text-center">Status</th>
                            <th class="text-center">Performance</th>
                            <th class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Count > 0)
                        {
                            @foreach (var partner in Model)
                            {
                                string colorClass = "";
                                string avatarClass = "";

                                @* Determine color schemes *@
                                if (partner.Status == "Active")
                                {
                                    colorClass = "badge-active";
                                    avatarClass = "bg-primary";
                                }
                                else if (partner.Status == "Pending")
                                {
                                    colorClass = "badge-pending";
                                    avatarClass = "bg-warning";
                                }
                                else if (partner.Status == "Suspended")
                                {
                                    colorClass = "badge-suspended";
                                    avatarClass = "bg-danger";
                                }
                                else
                                {
                                    colorClass = "badge-inactive";
                                    avatarClass = "bg-secondary";
                                }

                                <tr class="partner-row">
                                    <td class="text-center">
                                        <span class="font-weight-bold">DP-@partner.PartnerId.ToString("D4")</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar @avatarClass">
                                                @(partner.FullName?.Length > 0 ? partner.FullName.Substring(0, 1).ToUpper() : "")
                                            </div>
                                            <div>
                                                <div class="font-weight-bold">@partner.FullName</div>
                                                <small class="text-muted">Joined @(DateTime.Now.AddDays(-new Random().Next(1, 100)).ToString("MMM dd, yyyy"))</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div><i class="fas fa-phone-alt text-primary mr-1"></i> @partner.ContactNumber</div>
                                            <div><i class="fas fa-envelope text-primary mr-1"></i> @partner.Email</div>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <span class="badge @colorClass">
                                            <i class="fas fa-circle mr-1" style="font-size: 8px;"></i>
                                            @partner.Status
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        @{
                                            // Simulating performance metrics
                                            var rand = new Random();
                                            var rating = Math.Round(3 + rand.NextDouble() * 2, 1);
                                            var deliveries = rand.Next(10, 100);
                                            var onTime = rand.Next(85, 100);
                                        }
                                        <div class="small">
                                            <div class="mb-1">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= Math.Floor(rating))
                                                    {
                                                        <i class="fas fa-star text-warning"></i>
                                                    }
                                                    else if (i - rating < 1 && i - rating > 0)
                                                    {
                                                        <i class="fas fa-star-half-alt text-warning"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-warning"></i>
                                                    }
                                                }
                                                <span class="ml-1">@rating</span>
                                            </div>
                                            <div class="mb-1">
                                                <span class="text-muted">@deliveries orders</span>
                                            </div>
                                            <div>
                                                <span class="text-muted">@onTime% on-time</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        <a asp-action="Profile" asp-route-id="@partner.PartnerId" class="btn btn-action btn-profile mb-1">
                                            <i class="fas fa-user mr-1"></i> Profile
                                        </a>
                                        <div>
                                            @if (partner.Status != "Active")
                                            {
                                                <a asp-action="Approve" asp-route-id="@partner.PartnerId" class="btn btn-action btn-approve">
                                                    <i class="fas fa-check mr-1"></i> Approve
                                                </a>
                                            }
                                            @if (partner.Status != "Suspended")
                                            {
                                                <a asp-action="Reject" asp-route-id="@partner.PartnerId" class="btn btn-action btn-reject">
                                                    <i class="fas fa-ban mr-1"></i> @(partner.Status == "Active" ? "Suspend" : "Reject")
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center py-5">
                                    <div class="empty-state">
                                        <i class="fas fa-user-slash fa-4x text-gray-300 mb-3"></i>
                                        <h5 class="text-gray-500">No delivery partners found</h5>
                                        <p class="text-gray-400 mb-3">There are no delivery partners registered in the system yet.</p>
                                        <a href="#" class="btn btn-sm btn-primary">
                                            <i class="fas fa-plus mr-1"></i> Add New Partner
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model != null && Model.Count > 10)
            {
                <div class="d-flex justify-content-between align-items-center p-3 border-top">
                    <div class="small text-muted">
                        Showing <span class="font-weight-bold">1</span> to <span class="font-weight-bold">10</span> of <span class="font-weight-bold">@Model.Count</span> partners
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>
</div>

<!-- Include Font Awesome if not already in the layout -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

<!-- JavaScript for enhanced functionality -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Simulating loading state
        const loadingOverlay = document.getElementById('loadingOverlay');
        if (loadingOverlay) {
            loadingOverlay.style.opacity = '1';
            loadingOverlay.style.visibility = 'visible';

            setTimeout(() => {
                loadingOverlay.style.opacity = '0';
                loadingOverlay.style.visibility = 'hidden';
            }, 800);
        }

        // Search functionality
        const searchInput = document.getElementById('searchPartner');
        if (searchInput) {
            searchInput.addEventListener('keyup', function() {
                const searchValue = this.value.toLowerCase();
                const rows = document.querySelectorAll('.partner-row');

                rows.forEach(row => {
                    const name = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const contact = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    const isVisible = name.includes(searchValue) || contact.includes(searchValue);

                    row.style.display = isVisible ? '' : 'none';
                });
            });
        }

        // Status filter functionality
        const statusFilter = document.getElementById('statusFilter');
        if (statusFilter) {
            statusFilter.addEventListener('change', function() {
                const filterValue = this.value;
                const rows = document.querySelectorAll('.partner-row');

                rows.forEach(row => {
                    if (filterValue === 'all') {
                        row.style.display = '';
                    } else {
                        const status = row.querySelector('td:nth-child(4)').textContent.trim();
                        row.style.display = status.includes(filterValue) ? '' : 'none';
                    }
                });
            });
        }

        // Add hover animation to rows
        const tableRows = document.querySelectorAll('.partner-row');
        tableRows.forEach(row => {
            row.addEventListener('mouseenter', () => {
                row.style.transform = 'translateY(-2px)';
                row.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
                row.style.backgroundColor = 'rgba(78, 115, 223, 0.05)';
                row.style.transition = 'all 0.3s ease';
            });

            row.addEventListener('mouseleave', () => {
                row.style.transform = 'translateY(0)';
                row.style.boxShadow = 'none';
                row.style.backgroundColor = '';
            });
        });

        // Action button click effect
        const actionButtons = document.querySelectorAll('.btn-action');
        actionButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Show loading effect when clicked
                this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Loading...';

                // Simulate action delay (remove in production)
                setTimeout(() => {
                    const originalHTML = this.getAttribute('data-original-html') || this.innerHTML;
                    this.innerHTML = originalHTML;
                }, 1000);
            });

            // Store original HTML
            button.setAttribute('data-original-html', button.innerHTML);
        });
    });
</script>