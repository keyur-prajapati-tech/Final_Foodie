@{
    Layout = "_AdminLayout";
}
@model Foodie.ViewModels.DashBoardViewModel;
 
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Graph Example</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Chart.js Library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

    <div class="py-2 bg-body-tertiary">
        <div class="container mt-5 ">
            <div class="row">
                <!-- Sales Card -->
                <div class="col-md-6 col-lg-4">
                    <div class="card text-center shadow p-3">
                        <h5>Sales </h5>
                        <hr style="border:1px solid #000" />
                        <h3>@Model.MonthlySales</h3>
                        <p>This Month</p>
                    </div>
                </div>

                <!-- Customers Card -->
                <div class="col-md-6 col-lg-4">
                    <div class="card text-center shadow p-3">
                        <h5>Customers</h5>
                        <hr style="border:1px solid #000" />
                        <h3>@Model.MonthlyCustomers</h3>
                        <p>This Month</p>
                    </div>
                </div>

                <!-- Restaurants Card -->
                <div class="col-md-6 col-lg-4">
                    <div class="card text-center shadow p-3">
                        <h5>Restaurants</h5>
                        <hr style="border:1px solid #000" />
                        <h3>@Model.MonthlyRestaurants</h3>
                        <p>Total This Month</p>
                    </div>
                </div>
            </div>

            <div class="row mt-3 ">
                <!-- Orders Cards -->
                <div class="col-md-3">
                    <div class="card text-center shadow p-3">
                        <h5>Cancelled Orders</h5>
                        <h3>@Model.CancelledOrders</h3>
                    </div>
                </div>
                <div class="col-md-3 ">
                    <div class="card text-center shadow p-3">
                        <h5>Pending Orders</h5>
                        <h3>@Model.PendingOrders</h3>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center shadow p-3">
                        <h5>Accepted Orders</h5>
                        <h3>@Model.AcceptedOrders</h3>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center shadow p-3">
                        <h5>Delivered Orders</h5>
                        <h3>@Model.DeliverdOrders</h3>
                    </div>
                </div>
            </div>

            <div class="row mt-3 mb-2 ">
                <!-- Restaurants Status -->
                <div class="col-md-3">
                    <div class="card text-center shadow p-3">
                        <h5>Active Restaurants</h5>
                        <h3>@Model.ActiveRestaurants</h3>
                    </div>
                </div>
                <div class="col-md-3 ">
                    <div class="card text-center shadow p-3">
                        <h5>Inactive Restaurants</h5>
                        <h3>@Model.InactiveRestaurants</h3>
                    </div>
                </div>
                <div class="col-md-3 ">
                    <div class="card text-center shadow p-3">
                        <h5>Open Restaurants</h5>
                        <h3>@Model.OpenRestaurants</h3>
                    </div>
                </div>
                <div class="col-md-3 ">
                    <div class="card text-center shadow p-3">
                        <h5>Closed Restaurants</h5>
                        <h3>@Model.ClosedRestaurants</h3>
                    </div>
                </div>
            </div>

            <!-- Place Charts Below Summary Cards -->
            <div class="container mt-4">
    <div class="row">
        <!-- Monthly Sales Report -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3 h-100">
                <h2 class="text-center mb-3">📈 Monthly Sales Report</h2>

                <div class="row">
                    <div class="col-md-6">
                        <label for="monthSelect" class="form-label">Select Month:</label>
                                    <select id="monthSelect" class="form-select">
                                        @for (int m = 1; m <= 12; m++)
                                        {
                                            <option value="@m">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                                        }
                                    </select>
                    </div>
                    <div class="col-md-6">
                        <label for="yearSelect" class="form-label">Select Year:</label>
                                    <select id="yearSelect" class="form-select">
                                        @for (int y = DateTime.Now.Year - 5; y <= DateTime.Now.Year; y++)
                                        {
                                            <option value="@y">@y</option>
                                        }
                                    </select>
                    </div>
                </div>

                <div style="height: 300px; width: 100%;" class="mt-3">
                    <canvas id="salesChart"></canvas>
                </div>

                <div class="text-center mt-3">
                    <button id="downloadMonthlyPdf" class="btn btn-success">📥 Download PDF Report</button>
                </div>
            </div>
        </div>

        <!-- Yearly Sales Report -->
        <div class="col-md-6">
            <div class="card shadow-sm p-3 h-100">
                <h2 class="text-center mb-3">📊 Yearly Sales Report</h2>

                <div class="row">
                    <div class="col-md-6">
                        <label for="yearlySelect" class="form-label">Select Year:</label>
                                    <select id="yearSelect" class="form-select">
                                        @for (int y = DateTime.Now.Year - 5; y <= DateTime.Now.Year; y++)
                                        {
                                            <option value="@y">@y</option>
                                        }
                                    </select>
                    </div>
                </div>

                <div style="height: 300px; width: 100%;" class="mt-3">
                    <canvas id="yearlyChart"></canvas>
                </div>

                <div class="text-center mt-3">
                    <button id="downloadYearlyPdf" class="btn btn-success">📥 Download PDF Report</button>
                </div>
            </div>
        </div>
    </div>
</div>

            <script>
                let monthlyChart;
                let yearlyChart;

                // Load Monthly Sales chart (weekly data in selected month)
                function loadMonthlyChart(year, month) {
                    fetch(`/Orders/GetWeeklySales?year=${year}&month=${month}`)
                        .then(response => response.json())
                        .then(data => {
                            const labels = data.map(d => "Week " + (d.WeekNumber ?? d.weekNumber));
                            const amounts = data.map(d => d.TotalAmount ?? d.totalAmount);

                            if (monthlyChart) {
                                monthlyChart.destroy();
                            }

                            const ctx = document.getElementById('salesChart').getContext('2d');
                            monthlyChart = new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        label: `Total Sales for ${month}/${year}`,
                                        data: amounts,
                                        borderColor: 'rgba(54, 162, 235, 1)',
                                        backgroundColor: 'rgba(54, 162, 235, 0.6)'
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    scales: {
                                        y: {
                                            beginAtZero: true,
                                            ticks: {
                                                callback: val => '$' + val
                                            }
                                        }
                                    },
                                    plugins: {
                                        legend: { display: true },
                                        title: { display: true, text: 'Weekly Sales Overview' }
                                    }
                                }
                            });
                        })
                        .catch(err => console.error('Error fetching monthly sales:', err));
                }

                // Load Yearly Sales chart (monthly data in selected year)
                function loadYearlyChart(year) {
                    fetch(`/Orders/GetYearlySales?year=${year}`)
                        .then(response => response.json())
                        .then(data => {
                            const labels = data.map(d => {
                                // Month names from numbers 1-12
                                const monthName = new Date(year, d.salesMonth - 1).toLocaleString('default', { month: 'short' });
                                return monthName;
                            });
                            const amounts = data.map(d => d.totalSales);

                            if (yearlyChart) {
                                yearlyChart.destroy();
                            }

                            const ctx = document.getElementById('yearlyChart').getContext('2d');
                            yearlyChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: labels,
                                    datasets: [{
                                        label: `Sales in ${year}`,
                                        data: amounts,
                                        borderColor: 'rgba(75, 192, 192, 1)',
                                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                        fill: true,
                                        tension: 0.3,
                                        pointRadius: 5,
                                        pointHoverRadius: 7,
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    scales: {
                                        y: {
                                            beginAtZero: true,
                                            ticks: {
                                                callback: val => '$' + val
                                            }
                                        }
                                    },
                                    plugins: {
                                        legend: { display: true },
                                        title: { display: true, text: 'Monthly Sales Overview' }
                                    }
                                }
                            });
                        })
                        .catch(err => console.error('Error fetching yearly sales:', err));
                }

                document.addEventListener("DOMContentLoaded", function () {
                    const today = new Date();

                    // Set default selects for monthly
                    document.getElementById("monthSelect").value = today.getMonth() + 1;
                    document.getElementById("yearSelect").value = today.getFullYear();
                    loadMonthlyChart(today.getFullYear(), today.getMonth() + 1);

                    // Set default select for yearly
                    document.querySelector('#yearlyChart').closest('.card').querySelector('select').value = today.getFullYear();
                    loadYearlyChart(today.getFullYear());
                });

                // Monthly filter change
                document.getElementById("monthSelect").addEventListener("change", function () {
                    const year = document.getElementById("yearSelect").value;
                    const month = this.value;
                    loadMonthlyChart(year, month);
                });
                document.getElementById("yearSelect").addEventListener("change", function () {
                    const year = this.value;
                    const month = document.getElementById("monthSelect").value;
                    loadMonthlyChart(year, month);
                });

                // Yearly filter change
                document.querySelector('#yearlyChart').closest('.card').querySelector('select').addEventListener("change", function () {
                    loadYearlyChart(this.value);
                });

                // Monthly PDF download
                document.getElementById("downloadMonthlyPdf").addEventListener("click", function () {
                    const year = document.getElementById("yearSelect").value;
                    const month = document.getElementById("monthSelect").value;
                    window.location.href = `/Orders/DownloadReport?year=${year}&month=${month}`;
                });

                // Yearly PDF download
                document.getElementById("downloadYearlyPdf").addEventListener("click", function () {
                    const year = document.querySelector('#yearlyChart').closest('.card').querySelector('select').value;
                    window.location.href = `/Orders/DownloadYearlyReport?year=${year}`;
                });
            </script>

       
        <!-- Bootstrap JS Bundle (Optional for components like modals, dropdowns) -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    </div>
</body>
