@using System.Globalization
@{
    Layout = "~/Views/Shared/_RestaurantLayout.cshtml";
}
@model Foodie.ViewModels.PayoutsDetailsViewModel;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Payout Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .summary-card {
            border-radius: 10px;
            background-color: #f8f9fa;
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

            .summary-card h5 {
                font-weight: bold;
                margin-bottom: 10px;
            }

            .summary-card p {
                font-size: 20px;
                color: #28a745;
            }

        .table-wrapper {
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .download-btn {
            float: right;
        }

        .download-toast {
            position: fixed;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            background: #dfe3f3;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.9);
            padding: 20px;
            text-align: center;
            width: 300px;
            display: none;
        }

        .download-icon {
            font-size: 30px;
            color: green;
            margin-bottom: 10px;
        }

        .download-link {
            color: #000;
            font-weight: 600;
            text-decoration: underline;
            cursor: pointer;
            width: 80px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <!-- Earnings Summary Section -->
        <div class="container mt-5">
            <h3 class="my-4">💰 Payout Dashboard</h3>
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h2>Total Earnings</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="card text-white bg-success mb-3">
                                <div class="card-header">Total Earnings</div>
                                <div class="card-body">
                                    <h4 class="card-title" id="totalEarnings">₹0.00</h4>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card text-white bg-info mb-3">
                                <div class="card-header">Settled Amount</div>
                                <div class="card-body">
                                    <h4 class="card-title" id="settledAmount">₹0.00</h4>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card text-white bg-warning mb-3">
                                <div class="card-header">Pending Amount</div>
                                <div class="card-body">
                                    <h4 class="card-title" id="pendingAmount">₹0.00</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button id="refreshBtn" class="btn btn-primary mt-3">Refresh Data</button>
        </div>

        <!-- Weekly Payouts Section -->
        <div class="container mt-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title">Weekly Payouts</h3>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="monthFilter" class="form-label">Month</label>
                            <select id="monthFilter" class="form-select">
                                @for (int i = 1; i <= 12; i++)
                                {
                                    <option value="@i" selected="@(i == DateTime.Now.Month)">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label for="yearFilter" class="form-label">Year</label>
                            <select id="yearFilter" class="form-select">
                                @for (int i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 1; i++)
                                {
                                    <option value="@i" selected="@(i == DateTime.Now.Year)">@i</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button id="filterBtn" class="btn btn-primary me-2">Filter</button>
                            <button id="downloadBtn" class="btn btn-success">Download</button>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table id="payoutsTable" class="table table-striped table-bordered">
                            <thead class="table-dark">
                                <tr>
                                    <th>Week</th>
                                    <th>Order Value</th>
                                    <th>Commission</th>
                                    <th>GST</th>
                                    <th>Net Payout</th>
                                    <th>Payment Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Data loaded via AJAX -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Weekly Sales Chart Section -->
        <div class="container mt-4">
            <div class="card shadow-sm p-3">
                <h2 class="text-center text-primary mb-3">📈 Weekly Sales Report by Month</h2>
                <div class="row">
                    <div class="col-md-4">
                        <label for="filterYear" class="form-label">Year:</label>
                        <select id="filterYear" class="form-select">
                            @for (int y = DateTime.Now.Year - 5; y <= DateTime.Now.Year; y++)
                            {
                                <option value="@y" selected="@(y == DateTime.Now.Year)">@y</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="filterMonth" class="form-label">Month:</label>
                        <select id="filterMonth" class="form-select">
                            @for (int m = 1; m <= 12; m++)
                            {
                                <option value="@m" selected="@(m == DateTime.Now.Month)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <button id="downloadPdf" class="btn btn-success w-100">📥 Download PDF Report</button>
                    </div>
                </div>
                <div class="mt-4" style="height: 300px;">
                    <canvas id="weeklyChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Bank Account Info Section -->
        <div class="container mt-5">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5>🏦 Bank Account Info</h5>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.BankDetails != null)
                    {
                        <ul class="list-group">
                            <li class="list-group-item">Bank Name: <strong>@Model.BankDetails.bank_name</strong></li>
                            <li class="list-group-item">Account Number: <strong>@Model.BankDetails.ACC_NO</strong></li>
                            <li class="list-group-item">IFSC Code: <strong>@Model.BankDetails.IFSC_code</strong></li>
                            <li class="list-group-item">Account Type: <strong>@Model.BankDetails.ACC_Type</strong></li>
                        </ul>
                    }
                    else
                    {
                        <div class="alert alert-warning">Bank details not found.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        // Global chart variable
        let weeklyChart = null;

        $(document).ready(function() {
            // Initialize all data on page load
            loadEarningsData();
            loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
            loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());

            // Refresh button click handler
            $('#refreshBtn').click(function() {
                loadEarningsData();
                loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
                loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());
            });

            // Filter button click handler
            $('#filterBtn').click(function() {
                loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
            });

            // Download button click handler
            $('#downloadBtn').click(function() {
                const month = $('#monthFilter').val();
                const year = $('#yearFilter').val();
                window.location.href = `/OrderHistory/DownloadWeeklyPayouts?month=${month}&year=${year}`;
            });

            // Chart filter change handlers
            $('#filterYear, #filterMonth').change(function() {
                loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());
            });

            // PDF download button handler
            $('#downloadPdf').click(function() {
                const year = $('#filterYear').val();
                const month = $('#filterMonth').val();
                window.location.href = `/OrderHistory/DownloadWeeklyReport?year=${year}&month=${month}`;
            });
        });

        // Load earnings summary data
        function loadEarningsData() {
            $.ajax({
                url: '/OrderHistory/GetEarningData',
                type: 'GET',
                beforeSend: function() {
                    $('#totalEarnings, #settledAmount, #pendingAmount').html('<span class="spinner-border spinner-border-sm" role="status"></span>');
                },
                success: function(data) {
                    $('#totalEarnings').text('₹' + data.totalEarnings.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                    $('#settledAmount').text('₹' + data.settledAmount.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                    $('#pendingAmount').text('₹' + data.pendingAmount.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                },
                error: function(xhr, status, error) {
                    console.error('Error loading earnings data:', error);
                    $('#totalEarnings, #settledAmount, #pendingAmount').text('Error loading data');
                }
            });
        }

        // Load payouts table data
        function loadPayouts(month, year) {
            $.ajax({
                url: '/OrderHistory/GetWeeklyPayouts',
                type: 'GET',
                data: { month: month, year: year },
                beforeSend: function() {
                    $('#payoutsTable tbody').html('<tr><td colspan="6" class="text-center"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></td></tr>');
                },
                success: function(data) {
                    const tableBody = $('#payoutsTable tbody');
                    tableBody.empty();

                    if (data.length === 0) {
                        tableBody.append('<tr><td colspan="6" class="text-center">No data available for selected period</td></tr>');
                        return;
                    }

                    data.forEach(function(payout) {
                        const row = `
                            <tr>
                                <td>${payout.weekRange}</td>
                                <td>₹${parseFloat(payout.orderValue).toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</td>
                                <td>₹${parseFloat(payout.commission).toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</td>
                                <td>₹${parseFloat(payout.gst).toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</td>
                                <td>₹${parseFloat(payout.netPayout).toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</td>
                                <td>${payout.paymentDate}</td>
                            </tr>
                        `;
                        tableBody.append(row);
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Error loading payouts:', error);
                    $('#payoutsTable tbody').html('<tr><td colspan="6" class="text-center text-danger">Error loading data. Please try again.</td></tr>');
                }
            });
        }

        // Load weekly sales chart
        function loadWeeklyChart(year, month) {
            $.ajax({
                url: '/OrderHistory/GetWeeklySales',
                type: 'GET',
                data: { year: year, month: month },
                success: function(data) {
                    const labels = data.map(d => "Week " + d.weekNumber);
                    const amounts = data.map(d => d.totalAmount);

                    const ctx = document.getElementById('weeklyChart').getContext('2d');

                    // Destroy previous chart if it exists
                    if (weeklyChart) {
                        weeklyChart.destroy();
                    }

                    weeklyChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: `Total Sales in ${month}/${year}`,
                                data: amounts,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                fill: true,
                                tension: 0.3,
                                pointRadius: 5,
                                pointHoverRadius: 7
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return '₹' + value.toLocaleString('en-IN');
                                        }
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return '₹' + context.raw.toLocaleString('en-IN');
                                        }
                                    }
                                }
                            }
                        }
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Error loading weekly sales data:', error);
                    $('#weeklyChart').replaceWith('<div class="alert alert-danger">Error loading chart data</div>');
                }
            });
        }
    </script>
</body>
</html>