@using System.Globalization
@{
    Layout = "~/Views/Shared/_RestaurantLayout.cshtml";
}
@model Foodie.ViewModels.PayoutsDetailsViewModel;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payout Dashboard | Foodie</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #1cc88a;
            --info-color: #36b9cc;
            --warning-color: #f6c23e;
            --danger-color: #e74a3b;
            --light-color: #f8f9fc;
            --dark-color: #5a5c69;
            --shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }
        
        body {
            background-color: #f8f9fc;
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            color: #5a5c69;
        }
        
        .card {
            border: none;
            border-radius: 0.35rem;
            box-shadow: var(--shadow);
            margin-bottom: 1.5rem;
        }
        
        .card-header {
            background-color: var(--primary-color);
            color: white;
            font-weight: 600;
            border-bottom: none;
            padding: 1rem 1.35rem;
            border-radius: 0.35rem 0.35rem 0 0 !important;
        }
        
        .summary-card {
            border-radius: 0.35rem;
            padding: 1.5rem;
            text-align: center;
            box-shadow: var(--shadow);
            border-left: 0.25rem solid;
            transition: transform 0.3s ease;
        }
        
        .summary-card:hover {
            transform: translateY(-5px);
        }
        
        .summary-card.total {
            border-left-color: var(--primary-color);
            background: linear-gradient(135deg, rgba(78, 115, 223, 0.1) 0%, rgba(78, 115, 223, 0.05) 100%);
        }
        
        .summary-card.settled {
            border-left-color: var(--secondary-color);
            background: linear-gradient(135deg, rgba(28, 200, 138, 0.1) 0%, rgba(28, 200, 138, 0.05) 100%);
        }
        
        .summary-card.pending {
            border-left-color: var(--warning-color);
            background: linear-gradient(135deg, rgba(246, 194, 62, 0.1) 0%, rgba(246, 194, 62, 0.05) 100%);
        }
        
        .summary-card h5 {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--dark-color);
            font-size: 0.9rem;
            text-transform: uppercase;
        }
        
        .summary-card p {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0;
        }
        
        .summary-card.total p {
            color: var(--primary-color);
        }
        
        .summary-card.settled p {
            color: var(--secondary-color);
        }
        
        .summary-card.pending p {
            color: var(--warning-color);
        }
        
        .table-wrapper {
            background: #fff;
            padding: 1.25rem;
            border-radius: 0.35rem;
            box-shadow: var(--shadow);
        }
        
        .table thead th {
            border-bottom: none;
            background-color: var(--primary-color);
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
            padding: 0.75rem 1rem;
        }
        
        .table tbody td {
            padding: 0.75rem 1rem;
            vertical-align: middle;
            border-top: 1px solid #e3e6f0;
        }
        
        .table tbody tr:hover {
            background-color: rgba(78, 115, 223, 0.05);
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .btn-success {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
        }
        
        .btn-danger {
            background-color: var(--danger-color);
            border-color: var(--danger-color);
        }
        
        .btn-warning {
            background-color: var(--warning-color);
            border-color: var(--warning-color);
            color: #fff;
        }
        
        .form-control, .form-select {
            border-radius: 0.35rem;
            border: 1px solid #d1d3e2;
            padding: 0.375rem 0.75rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }
        
        .section-title {
            font-weight: 600;
            color: var(--dark-color);
            margin-bottom: 1.5rem;
            position: relative;
            padding-bottom: 0.5rem;
        }
        
        .section-title:after {
            content: '';
            position: absolute;
            left: 0;
            bottom: 0;
            width: 50px;
            height: 3px;
            background-color: var(--primary-color);
        }
        
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
        
        .bank-details-card .list-group-item {
            border: none;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 1rem 1.25rem;
        }
        
        .bank-details-card .list-group-item:last-child {
            border-bottom: none;
        }
        
        .bank-details-card .list-group-item strong {
            color: var(--dark-color);
            font-weight: 600;
        }
        
        .download-toast {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            padding: 1.5rem;
            text-align: center;
            width: 300px;
            display: none;
        }
        
        .download-icon {
            font-size: 2.5rem;
            color: var(--secondary-color);
            margin-bottom: 1rem;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 2rem;
            height: 2rem;
            vertical-align: text-bottom;
            border: 0.25em solid currentColor;
            border-right-color: transparent;
            border-radius: 50%;
            animation: spinner-border 0.75s linear infinite;
        }
        
        @@keyframes spinner-border {
            to { transform: rotate(360deg); }
        }
        
        .action-buttons .btn {
            margin-right: 0.5rem;
            min-width: 100px;
        }
        
        .action-buttons .btn i {
            margin-right: 0.3rem;
        }
        
        .no-data {
            text-align: center;
            padding: 2rem;
            color: var(--dark-color);
            background-color: rgba(0, 0, 0, 0.03);
            border-radius: 0.35rem;
        }
        
        .error-message {
            text-align: center;
            padding: 2rem;
            color: var(--danger-color);
            background-color: rgba(231, 74, 59, 0.05);
            border-radius: 0.35rem;
        }
        
        @@media (max-width: 768px) {
            .summary-card {
                margin-bottom: 1rem;
            }
            
            .action-buttons .btn {
                margin-bottom: 0.5rem;
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <!-- Page Header -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">Payout Dashboard</h1>
            <button id="refreshBtn" class="btn btn-primary">
                <i class="fas fa-sync-alt mr-2"></i>Refresh Data
            </button>
        </div>

        <!-- Earnings Summary Section -->
        <div class="row mb-4">
            <div class="col-xl-4 col-md-6 mb-4">
                <div class="summary-card total h-100">
                    <h5>Total Earnings</h5>
                    <p id="totalEarnings">₹0.00</p>
                    <div class="text-muted small">All-time earnings</div>
                </div>
            </div>
            <div class="col-xl-4 col-md-6 mb-4">
                <div class="summary-card settled h-100">
                    <h5>Settled Amount</h5>
                    <p id="settledAmount">₹0.00</p>
                    <div class="text-muted small">Amount transferred to your bank</div>
                </div>
            </div>
            <div class="col-xl-4 col-md-6 mb-4">
                <div class="summary-card pending h-100">
                    <h5>Pending Amount</h5>
                    <p id="pendingAmount">₹0.00</p>
                    <div class="text-muted small">Awaiting settlement</div>
                </div>
            </div>
        </div>

        <!-- Weekly Payouts Section -->
        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-white">Weekly Payouts</h6>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-4 mb-3 mb-md-0">
                        <label for="monthFilter" class="form-label">Month</label>
                        <select id="monthFilter" class="form-select">
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i" selected="@(i == DateTime.Now.Month)">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4 mb-3 mb-md-0">
                        <label for="yearFilter" class="form-label">Year</label>
                        <select id="yearFilter" class="form-select">
                            @for (int i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 1; i++)
                            {
                                <option value="@i" selected="@(i == DateTime.Now.Year)">@i</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4 d-flex align-items-end action-buttons">
                        <button id="filterBtn" class="btn btn-primary">
                            <i class="fas fa-filter"></i> Filter
                        </button>
                        <button id="downloadExcelBtn" class="btn btn-success">
                            <i class="fas fa-file-excel"></i> Excel
                        </button>
                        <button id="downloadPdfBtn" class="btn btn-danger">
                            <i class="fas fa-file-pdf"></i> PDF
                        </button>
                    </div>
                </div>

                <div class="table-responsive">
                    <table id="payoutsTable" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>Week</th>
                                <th>Order Value</th>
                                <th>Commission</th>
                                <th>GST</th>
                                <th>Net Payout</th>
                                <th>Payment Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Data loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Weekly Sales Chart Section -->
        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-white">Weekly Sales Report</h6>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-4 mb-3 mb-md-0">
                        <label for="filterYear" class="form-label">Year</label>
                        <select id="filterYear" class="form-select">
                            @for (int y = DateTime.Now.Year - 5; y <= DateTime.Now.Year; y++)
                            {
                                <option value="@y" selected="@(y == DateTime.Now.Year)">@y</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4 mb-3 mb-md-0">
                        <label for="filterMonth" class="form-label">Month</label>
                        <select id="filterMonth" class="form-select">
                            @for (int m = 1; m <= 12; m++)
                            {
                                <option value="@m" selected="@(m == DateTime.Now.Month)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <button id="downloadPdf" class="btn btn-success w-100">
                            <i class="fas fa-download"></i> Download PDF Report
                        </button>
                    </div>
                </div>
                <div class="chart-container">
                    <canvas id="weeklyChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Bank Account Info Section -->
        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-white">Bank Account Information</h6>
            </div>
            <div class="card-body bank-details-card">
                @if (Model != null && Model.BankDetails != null)
                {
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Bank Name</span>
                            <strong>@Model.BankDetails.bank_name</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Account Number</span>
                            <strong>@Model.BankDetails.ACC_NO</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>IFSC Code</span>
                            <strong>@Model.BankDetails.IFSC_code</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Account Type</span>
                            <strong>@Model.BankDetails.ACC_Type</strong>
                        </li>
                    </ul>
                }
                else
                {
                    <div class="alert alert-warning mb-0">Bank details not found. Please update your bank information to receive payouts.</div>
                }
            </div>
        </div>

        <!-- Download Toast Notification -->
        <div class="download-toast" id="downloadToast">
            <div class="download-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <h5>Download Complete!</h5>
            <p>Your file has been downloaded successfully.</p>
            <button class="btn btn-sm btn-primary" onclick="$('#downloadToast').fadeOut()">Close</button>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>

    <script>
        // Global chart variable
        let weeklyChart = null;

        $(document).ready(function() {
            // Initialize all data on page load
            loadEarningsData();
            loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
            loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());

            // Refresh button click handler
            $('#refreshBtn').click(function() {
                loadEarningsData();
                loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
                loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());
                
                // Show refresh animation
                $(this).find('i').addClass('fa-spin');
                setTimeout(() => {
                    $(this).find('i').removeClass('fa-spin');
                }, 1000);
            });

            // Filter button click handler
            $('#filterBtn').click(function() {
                loadPayouts($('#monthFilter').val(), $('#yearFilter').val());
            });

            // Download button click handlers
            $('#downloadExcelBtn').click(function() {
                const month = $('#monthFilter').val();
                const year = $('#yearFilter').val();
                window.location.href = `/weekly/download-excel?month=${month}&year=${year}`;
                showDownloadToast();
            });

            $('#downloadPdfBtn').click(function() {
                const month = $('#monthFilter').val();
                const year = $('#yearFilter').val();
                window.location.href = `/weekly/download-pdf?month=${month}&year=${year}`;
                showDownloadToast();
            });

            // Chart filter change handlers
            $('#filterYear, #filterMonth').change(function() {
                loadWeeklyChart($('#filterYear').val(), $('#filterMonth').val());
            });

            // PDF download button handler
            $('#downloadPdf').click(function() {
                const year = $('#filterYear').val();
                const month = $('#filterMonth').val();
                window.location.href = `/OrderHistory/DownloadWeeklyReport?year=${year}&month=${month}`;
                showDownloadToast();
            });
        });

        function showDownloadToast() {
            $('#downloadToast').fadeIn();
            setTimeout(() => {
                $('#downloadToast').fadeOut();
            }, 3000);
        }

        // Load earnings summary data
        function loadEarningsData() {
            $.ajax({
                url: '/OrderHistory/GetEarningData',
                type: 'GET',
                beforeSend: function() {
                    $('#totalEarnings, #settledAmount, #pendingAmount').html('<span class="loading-spinner"></span>');
                },
                success: function(data) {
                    $('#totalEarnings').text('₹' + data.totalEarnings.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                    $('#settledAmount').text('₹' + data.settledAmount.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                    $('#pendingAmount').text('₹' + data.pendingAmount.toLocaleString('en-IN', {minimumFractionDigits: 2}));
                },
                error: function(xhr, status, error) {
                    console.error('Error loading earnings data:', error);
                    $('#totalEarnings, #settledAmount, #pendingAmount').html('<i class="fas fa-exclamation-triangle text-danger"></i> Error');
                }
            });
        }

        // Load payouts table data
        function loadPayouts(month, year) {
            $.ajax({
                url: '/GetWeeklyPayouts',
                type: 'GET',
                data: { month: month, year: year },
                beforeSend: function() {
                    $('#payoutsTable tbody').html(
                        '<tr><td colspan="6" class="text-center py-4"><div class="loading-spinner text-primary"></div><p class="mt-2 mb-0">Loading data...</p></td></tr>'
                    );
                },
                success: function(data) {
                    const tableBody = $('#payoutsTable tbody');
                    tableBody.empty();

                    if (!data || data.length === 0) {
                        tableBody.append(
                            '<tr><td colspan="6" class="no-data"><i class="fas fa-info-circle fa-2x mb-3"></i><h5>No data available</h5><p class="text-muted">No payouts found for selected period</p></td></tr>'
                        );
                        return;
                    }

                    data.forEach(function(payout) {
                        const row = `
                            <tr>
                                <td>${payout.weekRange || 'N/A'}</td>
                                <td class="text-end">₹${formatCurrency(payout.orderValue)}</td>
                                <td class="text-end">₹${formatCurrency(payout.commission)}</td>
                                <td class="text-end">₹${formatCurrency(payout.gst)}</td>
                                <td class="text-end fw-bold">₹${formatCurrency(payout.netPayout)}</td>
                                <td>${payout.paymentDate || 'Pending'}</td>
                            </tr>
                        `;
                        tableBody.append(row);
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Error loading payouts:', error);
                    console.error('Response:', xhr.responseText);
            
                    let errorMessage = 'Error loading data';
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        if (errorResponse && errorResponse.message) {
                            errorMessage += `: ${errorResponse.message}`;
                        }
                    } catch (e) {
                        errorMessage += '. Please try again later';
                    }
            
                    $('#payoutsTable tbody').html(
                        `<tr><td colspan="6" class="error-message"><i class="fas fa-exclamation-triangle fa-2x mb-3"></i><h5>Error Loading Data</h5><p>${errorMessage}</p></td></tr>`
                    );
                }
            });
        }

        function formatCurrency(value) {
            return parseFloat(value || 0).toLocaleString('en-IN', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }

        // Load weekly sales chart
         function loadWeeklyChart(year, month) {
            $.ajax({
                url: '/OrderHistory/GetWeeklySales',
                type: 'GET',
                data: { year: year, month: month },
                success: function(data) {
                    const labels = data.map(d => "Week " + d.weekNumber);
                    const amounts = data.map(d => d.totalAmount);

                    const ctx = document.getElementById('weeklyChart').getContext('2d');

                    // Destroy previous chart if it exists
                    if (weeklyChart) {
                        weeklyChart.destroy();
                    }

                    weeklyChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: `Total Sales in ${month}/${year}`,
                                data: amounts,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                fill: true,
                                tension: 0.3,
                                pointRadius: 5,
                                pointHoverRadius: 7
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return '₹' + value.toLocaleString('en-IN');
                                        }
                                    }
                                }
                            },
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top'
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return '₹' + context.raw.toLocaleString('en-IN');
                                        }
                                    }
                                }
                            }
                        }
                    });
                },
                error: function(xhr, status, error) {
                    console.error('Error loading weekly sales data:', error);
                    $('#weeklyChart').replaceWith('<div class="alert alert-danger">Error loading chart data</div>');
                }
            });
        }
    </script>
</body>
</html>