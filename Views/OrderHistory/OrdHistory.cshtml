@{
    Layout = "~/Views/Shared/_RestaurantLayout.cshtml";
    decimal listprice = 0;
}
@model List<Foodie.Models.Restaurant.ordersViewMdel>;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        .download-toast {
            position: fixed;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            background: #dfe3f3;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.9);
            padding: 20px;
            text-align: center;
            width: 300px;
            display: none; /* Initially hidden */
        }

        .download-icon {
            font-size: 30px;
            color: green;
            margin-bottom: 10px;
        }

        .download-link {
            color: #000;
            font-weight: 600;
            text-decoration: underline;
            cursor: pointer;
            width: 80px;
        }
    </style>
</head>
<body>

    <div class="container-fluid mt-4">
        <h2 class="mb-4">Order History</h2>


        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="d-flex flex-row w-75">
                <input type="text" id="searchOrder" class="form-control w-100" placeholder="Enter full order ID to search">
                <button class="btn btn-primary ms-2" onclick="searchOrder()">Search</button>
            </div>
            <div class="container-fluid d-flex justify-content-end ">
                <!-- Download Button -->
                <button class="btn btn-primary" id="downloadBtn">Download</button>

                <!-- Download Popup -->
                <div class="download-toast" id="popup">
                    <div class="download-icon">
                        <i class="bi bi-download"></i> <!-- Bootstrap Icon -->
                    </div>
                    <div class="mb-2">
                        Download order history from <strong>1st Nov</strong> to <strong>3rd Nov</strong>
                    </div>
                    <div>
                        <a href="#" class="download-link">Download now</a>
                    </div>
                </div>
            </div>

        </div>




        <div class="container-fluid">




            @foreach (var ord in Model)
            {
                if (ord.food_status == "completed")
                {
                    <div class="card order-card rejected">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <span class="badge bg-success">Order Complete</span>
                                <span class="text-muted">9:29 PM | 1 Nov</span>
                            </div>
                            <p class="fw-bolder mt-2">Order ID: @ord.order_id</p>

                            @foreach (var menu in ord.Dishes)
                            {

                                listprice += menu.list_price;

                                <p class="fw-bold mt-2">Item: @menu.quantity x @menu.menu_name</p>

                            }
                            <p class="fw-bold mt-2">Total: ₹ @listprice</p>
                            <p class="fw-bold mt-2">Customer Name: @ord.customer_name</p>
                        </div>
                    </div>
                }
                else
                {
                    <div class="card order-card delivered">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <span class="badge bg-danger">Rejected</span>
                                <span class="text-muted">9:29 PM | 1 Nov</span>
                            </div>
                            <p class="fw-bold mt-2">Order ID: @ord.order_id</p>

                            @foreach (var menu in ord.Dishes)
                            {

                                listprice += menu.list_price;

                                <p class="fw-bold mt-2">Item: @menu.quantity x @menu.menu_name</p>

                            }
                            <p class="fw-bold mt-2">Total: ₹ @listprice</p>
                            <p class="fw-bold mt-2">Customer Name: @ord.customer_name</p>
                        </div>
                    </div>
                   
                }
            }
        </div>
    </div>


    <script>
        function searchOrder() {
            var searchValue = document.getElementById("searchOrder").value.toLowerCase();
            document.querySelectorAll(".order-card").forEach(order => {
                order.style.display = order.innerText.toLowerCase().includes(searchValue) ? "block" : "none";
            });
        }

        function showOrderDetails(id, status, rating, time, total, items) {
            document.getElementById("orderId").innerText = id;
            document.getElementById("orderStatus").innerText = status;
            document.getElementById("orderRating").innerText = rating;
            document.getElementById("orderTime").innerText = time;
            document.getElementById("orderTotal").innerText = total;
            document.getElementById("orderItems").innerText = items;

            // Update badge color
            let statusBadge = document.getElementById("orderStatus");
            if (status === "Delivered") {
                statusBadge.classList.remove("bg-secondary", "bg-danger");
                statusBadge.classList.add("bg-success");
            } else if (status === "Rejected") {
                statusBadge.classList.remove("bg-secondary", "bg-success");
                statusBadge.classList.add("bg-danger");
            } else {
                statusBadge.classList.remove("bg-success", "bg-danger");
                statusBadge.classList.add("bg-secondary");
            }

            // Update Timeline Steps
            let steps = document.querySelectorAll(".step");
            steps.forEach(step => step.classList.remove("completed"));
            if (status === "Delivered") {
                steps.forEach(step => step.classList.add("completed"));
            }
        }


        document.getElementById("downloadBtn").addEventListener("click", function () {
            document.getElementById("popup").style.display = "block";

            // Optional: Auto-hide after 3 seconds
            setTimeout(() => {
                document.getElementById("popup").style.display = "none";
            }, 5000);
        });
    </script>

</body>
</html>

<style>
    .order-card {
        border-left: 5px solid;
        margin-bottom: 15px;
        padding: 15px;
        cursor: pointer;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .order-card:hover {
            transform: scale(1.02);
        }

    .delivered {
        border-left-color: #28a745;
        background-color: #e8f5e9;
    }

    .rejected {
        border-left-color: #dc3545;
        background-color: #ffebee;
    }

    .order-timeline {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
    }

    .step {
        flex: 1;
        text-align: center;
        background: #ddd;
        padding: 5px;
        border-radius: 5px;
    }

        .step.completed {
            background: #28a745;
            color: white;
        }
</style>