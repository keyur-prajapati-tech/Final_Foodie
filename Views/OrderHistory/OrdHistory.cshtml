@{
    Layout = "~/Views/Shared/_RestaurantLayout.cshtml";
    decimal listprice = 0;
}
@model List<Foodie.Models.Restaurant.ordersViewMdel>;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --success-color: #1cc88a;
            --danger-color: #e74a3b;
            --warning-color: #f6c23e;
            --light-bg: #f8f9fc;
            --card-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

        body {
            background-color: #f8f9fc;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container-fluid {
            max-width: 1200px;
            padding: 0 20px;
        }

        h2 {
            color: #2e3a4d;
            font-weight: 600;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #e3e6f0;
        }

        /* Search and Download Section */
        .action-section {
            background: white;
            border-radius: 0.35rem;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--card-shadow);
        }

        .search-input-group {
            position: relative;
            flex-grow: 1;
        }

            .search-input-group input {
                padding-left: 2.5rem;
                border-radius: 0.35rem;
                border: 1px solid #d1d3e2;
            }

            .search-input-group i {
                position: absolute;
                left: 1rem;
                top: 50%;
                transform: translateY(-50%);
                color: #b7b9cc;
            }

        /* Order Cards */
        .order-card {
            border: none;
            border-radius: 0.35rem;
            margin-bottom: 1.25rem;
            box-shadow: var(--card-shadow);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            overflow: hidden;
        }

            .order-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 0.5rem 1.5rem rgba(58, 59, 69, 0.2);
            }

            .order-card .card-body {
                padding: 1.5rem;
            }

            .order-card.delivered {
                border-left: 4px solid var(--success-color);
            }

            .order-card.rejected {
                border-left: 4px solid var(--danger-color);
            }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .order-time {
            color: #858796;
            font-size: 0.85rem;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
            font-size: 0.75rem;
        }

        .order-id {
            font-weight: 600;
            color: #2e3a4d;
            margin-bottom: 1rem;
        }

        .order-detail {
            margin-bottom: 0.5rem;
            color: #5a5c69;
        }

            .order-detail strong {
                color: #2e3a4d;
            }

        /* Download Toast */
        .download-toast {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
            background: white;
            border-radius: 0.35rem;
            box-shadow: 0 0.5rem 1.5rem rgba(58, 59, 69, 0.3);
            padding: 1.5rem;
            text-align: center;
            width: 320px;
            display: none;
        }

        .download-icon {
            font-size: 2.5rem;
            color: var(--success-color);
            margin-bottom: 1rem;
        }

        .download-link {
            color: var(--primary-color);
            font-weight: 600;
            text-decoration: none;
            display: inline-block;
            margin-top: 0.5rem;
            transition: color 0.2s;
        }

            .download-link:hover {
                color: #2a5bd7;
            }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            .action-section

        {
            flex-direction: column;
        }

        .search-input-group {
            margin-bottom: 1rem;
            width: 100%;
        }

        .download-btn-container {
            width: 100%;
            justify-content: flex-start;
        }

        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <h2>Order History</h2>

        <div class="action-section d-flex gap-2 flex-wrap justify-content-between align-items-center">
            <div class="search-input-group w-50">
                <i class="bi bi-search"></i>
                <input type="text" id="searchOrder" class="form-control" placeholder="Search by order ID...">
            </div>
            <div class="download-btn-container">
                <button class="btn btn-primary" id="downloadBtn">
                    <i class="bi bi-download me-2"></i>Download Report
                </button>
            </div>
        </div>

        <div class="download-toast" id="popup">
            <div class="download-icon">
                <i class="bi bi-cloud-arrow-down-fill"></i>
            </div>
            <h5 class="mb-3">Download Report</h5>
            <p class="text-muted mb-3">
                Download order history from <strong>1st Nov</strong> to <strong>3rd Nov</strong>
            </p>
            <a href="#" class="download-link">
                <i class="bi bi-file-earmark-arrow-down me-2"></i>Download Now
            </a>
        </div>

        <div class="order-list">
            @foreach (var ord in Model)
            {
                listprice = 0; // Reset for each order
                <div class="card order-card @(ord.food_status == "completed" ? "delivered" : "rejected")">
                    <div class="card-body">
                        <div class="order-header">
                            <span class="badge @(ord.food_status == "completed" ? "bg-success" : "bg-danger")">
                                @(ord.food_status == "completed" ? "Completed" : "Rejected")
                            </span>
                            <span class="order-time">
                                <i class="bi bi-clock me-1"></i>9:29 PM | 1 Nov
                            </span>
                        </div>

                        <h5 class="order-id">Order #@ord.order_id</h5>

                        <div class="order-items mb-3">
                            @foreach (var menu in ord.Dishes)
                            {
                                listprice += menu.list_price;
                                <p class="order-detail">
                                    <i class="bi bi-check-circle-fill text-success me-2"></i>
                                    <strong>@menu.quantity x @menu.menu_name</strong>
                                </p>
                            }
                        </div>

                        <div class="order-footer">
                            <p class="order-detail">
                                <i class="bi bi-currency-rupee me-2"></i>
                                <strong>Total: ₹@listprice</strong>
                            </p>
                            <p class="order-detail">
                                <i class="bi bi-person-fill me-2"></i>
                                <strong>Customer: @ord.customer_name</strong>
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <script>
        // Search functionality
        function searchOrder() {
            var searchValue = document.getElementById("searchOrder").value.toLowerCase();
            document.querySelectorAll(".order-card").forEach(order => {
                order.style.display = order.innerText.toLowerCase().includes(searchValue) ? "block" : "none";
            });
        }

        // Add event listener to search input for Enter key
        document.getElementById("searchOrder").addEventListener("keyup", function(event) {
            if (event.key === "Enter") {
                searchOrder();
            }
        });

        // Download popup functionality
        document.getElementById("downloadBtn").addEventListener("click", function() {
            document.getElementById("popup").style.display = "block";
            setTimeout(() => {
                document.getElementById("popup").style.display = "none";
            }, 5000);
        });

        // Close popup when clicking outside
        document.addEventListener('click', function(event) {
            const popup = document.getElementById('popup');
            const downloadBtn = document.getElementById('downloadBtn');
            if (popup.style.display === 'block' &&
                !popup.contains(event.target) &&
                event.target !== downloadBtn &&
                !downloadBtn.contains(event.target)) {
                popup.style.display = 'none';
            }
        });
    </script>
</body>
</html>