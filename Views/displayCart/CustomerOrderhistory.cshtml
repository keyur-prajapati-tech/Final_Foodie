@model List<Foodie.Models.customers.tbl_orders>

@{
    Layout = null;
    Func<string, string> GetStatusColor = status =>
    {
        return status.ToLower() switch
        {
            "paid" => "primary",
            "delivered" => "success",
            "pending" => "warning",
            "rejected" => "danger",
            "accepted" => "info",
            _ => "secondary"
        };
    };
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Your Orders</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        .order-card {
            transition: all 0.3s ease;
            border-left: 4px solid;
        }

            .order-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

            .order-card.paid {
                border-left-color: #0d6efd;
            }

            .order-card.delivered {
                border-left-color: #198754;
            }

            .order-card.pending {
                border-left-color: #ffc107;
            }

            .order-card.rejected {
                border-left-color: #dc3545;
            }

            .order-card.accepted {
                border-left-color: #0dcaf0;
            }

        .item-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <!-- Filters -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="d-flex gap-2">
                <select class="form-select" style="width: 180px;">
                    <option>All Status</option>
                    <option>Delivered</option>
                    <option>Pending</option>
                    <option>Rejected</option>
                    <option>Paid</option>
                    <option>Accepted</option>
                </select>
                <select class="form-select" style="width: 150px;">
                    <option>Last 30 Days</option>
                    <option>Last 6 Months</option>
                    <option>This Year</option>
                </select>
            </div>
            <h4 class="mb-0"><i class="bi bi-box-seam"></i> Your Orders</h4>
        </div>

        <!-- Orders List -->
        @foreach (var order in Model)
        {
            <div class="card shadow-sm mb-4 order-card @order.order_status.ToLower()">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <strong>Order Placed:</strong> @order.order_date.ToString("dd MMM yyyy")<br />
                            <strong>Total:</strong> ₹@order.grand_total
                        </div>
                        <div class="text-end">
                            <strong>Order ID:</strong> @order.order_id<br />
                            <span class="badge bg-@GetStatusColor(order.order_status)">
                                @order.order_status
                            </span>
                        </div>
                    </div>

                    <hr />

                    @foreach (var item in order.OrderItems)
                    {
                        <div class="d-flex mb-3">
                            <div class="me-3">
                                @if (item.menu_img != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.menu_img)"
                                         class="img-thumbnail item-img" />
                                }
                                else
                                {
                                    <div class="item-img bg-light d-flex align-items-center justify-content-center">
                                        <i class="bi bi-image text-muted"></i>
                                    </div>
                                }
                            </div>
                            <div class="flex-grow-1">
                                <h6>@item.menu_name</h6>
                                <p>Qty: @item.quantity × ₹@item.list_price</p>
                                <strong>₹@(item.quantity * item.list_price)</strong>
                            </div>
                            <div class="text-end">
                                <!-- Rate button - only for delivered orders -->
                                @if (order.order_status.Equals("Delivered", StringComparison.OrdinalIgnoreCase))
                                {
                                    <button class="btn btn-outline-primary btn-sm"
                                            onclick="openRatingModal(@order.order_id, @order.restaurant_id, @order.customer_id, '@item.menu_name')">
                                        <i class="bi bi-star"></i> Rate
                                    </button>
                                }
                            </div>
                        </div>
                    }

                    <div class="d-flex justify-content-between align-items-center">
                        <div class="action-buttons">
                            <!-- Download Bill - only for paid or delivered orders -->
                            @if (order.order_status.Equals("Paid", StringComparison.OrdinalIgnoreCase) ||
                           order.order_status.Equals("Delivered", StringComparison.OrdinalIgnoreCase))
                            {
                                <button class="btn btn-sm btn-success me-2" onclick="generateBill(@order.order_id)">
                                    <i class="bi bi-download"></i> Download Bill
                                </button>
                            }

                            <!-- Track button - only for delivered or accepted orders -->
                            @if (order.order_status.Equals("Delivered", StringComparison.OrdinalIgnoreCase) ||
                           order.order_status.Equals("Accepted", StringComparison.OrdinalIgnoreCase))
                            {
                                <button class="btn btn-sm btn-outline-secondary me-2">
                                    <i class="bi bi-geo-alt"></i> Track
                                </button>
                            }

                            <!-- Cancel button - only for pending orders -->
                            @if (order.order_status.Equals("Pending", StringComparison.OrdinalIgnoreCase))
                            {
                                <button class="btn btn-sm btn-outline-danger me-2">
                                    <i class="bi bi-x-circle"></i> Cancel
                                </button>
                            }

                            <!-- Reorder button - for all statuses except rejected -->
                            @if (!order.order_status.Equals("Rejected", StringComparison.OrdinalIgnoreCase))
                            {
                                <button class="btn btn-sm btn-outline-dark">
                                    <i class="bi bi-arrow-repeat"></i> Buy Again
                                </button>
                            }

                            <!-- Feedback button - only for rejected orders -->
                            @if (order.order_status.Equals("Rejected", StringComparison.OrdinalIgnoreCase))
                            {
                                <button class="btn btn-sm btn-outline-info">
                                    <i class="bi bi-chat-left-text"></i> Feedback
                                </button>
                            }
                        </div>

                        <!-- Additional actions for accepted orders -->
                        @if (order.order_status.Equals("Accepted", StringComparison.OrdinalIgnoreCase))
                        {
                            <div>
                                <button class="btn btn-sm btn-outline-warning">
                                    <i class="bi bi-clock-history"></i> Estimated: 30 mins
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Rating Modal -->
    <div class="modal fade" id="ratingModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Rate <span id="menuName"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="ratingForm">
                        <input type="hidden" id="restaurantId" name="restaurantId" />
                        <input type="hidden" id="customerId" name="customerId" />
                        <input type="hidden" id="orderId" name="orderId" />
                        <input type="hidden" id="menuId" name="menuId" />

                        <div class="mb-3">
                            <label class="form-label">Rating</label>
                            <select class="form-select" id="ratingValue">
                                <option value="1">1 - Poor</option>
                                <option value="2">2 - Fair</option>
                                <option value="3">3 - Good</option>
                                <option value="4">4 - Very Good</option>
                                <option value="5">5 - Excellent</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Review</label>
                            <textarea class="form-control" id="reviewText" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script>
        $('#ratingModal').on('show.bs.modal', function (e) {
            var button = $(e.relatedTarget);
            $('#orderId').val(button.data('order-id'));
            $('#menuId').val(button.data('menu-id'));
            $('#menuName').text(button.data('menu-name'));
        });

        $('#ratingForm').submit(function (e) {
            e.preventDefault();

            var review = {
                OrderId: parseInt($('#orderId').val()),
                RestaurantId: parseInt($('#restaurantId').val()),
                RatingValue: parseInt($('#ratingValue').val()),
                discription: $('#reviewText').val()
                // CustomerId is set in controller from session
            };

            $.ajax({
                url: '/displayCart/SubmitRating',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(review),
                success: function (res) {
                    if (res.success) {
                        alert("Thank You...!Review submitted successfully!");
                        $('#ratingModal').modal('hide');
                    } else {
                        alert("Failed to submit review.");
                    }
                },
                error: function (err) {
                    alert("Error submitting review.");
                    console.error(err);
                }
            });
        });

        function generateBill(orderId) {
            window.location.href = '@Url.Action("GenerateBill", "displayCart")?orderId=' + orderId;
        }

        // Filter functionality
        $('.form-select').change(function() {
            const statusFilter = $('.form-select').eq(0).val().toLowerCase();
            const timeFilter = $('.form-select').eq(1).val();

            $('.order-card').each(function() {
                const cardStatus = $(this).attr('class').match(/paid|delivered|pending|rejected|accepted/)[0];
                const showStatus = statusFilter === 'all status' || cardStatus === statusFilter;

                // Add time filter logic if needed
                $(this).toggle(showStatus);
            });
        });

        function openRatingModal(orderId, restaurantId, customerId, menuName) {
            $('#orderId').val(orderId);
            $('#restaurantId').val(restaurantId);
            $('#menuName').text(menuName);
            $('#ratingModal').modal('show');
        }
    </script>
</body>
</html>