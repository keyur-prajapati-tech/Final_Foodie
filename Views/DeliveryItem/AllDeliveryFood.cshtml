@{
    Layout = "~/Views/Shared/_foodieheader.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restaurant Listings</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* General Page Styling */
        body {
            background-color: #f8f9fa;
            font-family: 'Arial', sans-serif;
        }

        /* Search Box */
        .search-container {
            position: relative;
            margin: 20px 0;
        }

        .search-input {
            width: 100%;
            padding: 12px 20px;
            border-radius: 25px;
            border: 1px solid #ddd;
            font-size: 16px;
            padding-left: 45px;
        }

        .search-icon {
            position: absolute;
            left: 15px;
            top: 12px;
            color: #777;
        }

        /* Filter Buttons */
        .filters {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 20px;
        }

        .filter-btn {
            border: 1px solid #ccc;
            background: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
        }

            .filter-btn.active {
                background: black;
                color: white;
            }

            .filter-btn.veg {
                background: #4CAF50;
                color: white;
            }

            .filter-btn.non-veg {
                background: #f44336;
                color: white;
            }

        .close {
            margin-left: 5px;
            cursor: pointer;
        }

        /* Restaurant Grid */
        .restaurant-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .restaurant-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
        }

            .restaurant-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            }

            .restaurant-card img {
                width: 100%;
                height: 200px;
                object-fit: cover;
            }

        .card-body {
            padding: 15px;
        }

        .card-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .card-text {
            color: #666;
            font-size: 14px;
            margin-bottom: 5px;
        }

        .rating {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

            .rating .stars {
                color: #FFD700;
                margin-right: 5px;
            }

        .status {
            font-weight: bold;
            font-size: 14px;
        }

            .status.open {
                color: #4CAF50;
            }

            .status.closed {
                color: #f44336;
            }

        .cuisine-btn {
            border-radius: 5px;
            padding: 6px 16px;
            margin: 5px;
            border: 3px solid #333;
            background-color: #f8f9fa;
            color: #000;
            cursor: pointer;
            transition: 0.2s;
            font-weight: 600;
            text-transform: uppercase;
        }

            .cuisine-btn:hover {
                background-color: #e2e6ea;
            }

            .cuisine-btn.active {
                background-color: #ff6f61;
                color: #fff;
                border: none;
                position: relative;
            }

                .cuisine-btn.active::after {
                    content: " ×";
                    margin-left: 6px;
                    font-weight: bold;
                    cursor: pointer;
                }

        /* Recommended Section */
        .section-title {
            font-size: 24px;
            font-weight: bold;
            margin: 30px 0 15px;
            position: relative;
            padding-bottom: 10px;
        }

            .section-title::after {
                content: "";
                position: absolute;
                bottom: 0;
                left: 0;
                width: 50px;
                height: 3px;
                background: #ff6f61;
            }

        /* Loading Spinner */
        .spinner {
            display: none;
            width: 40px;
            height: 40px;
            margin: 20px auto;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #ff6f61;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        .menu-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .menu-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            transition: transform 0.3s;
        }

            .menu-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        .menu-img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .menu-body {
            padding: 15px;
        }

        .menu-title {
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

        .menu-price {
            font-weight: bold;
            color: #28a745;
        }

        .restaurant-info {
            font-size: 0.9rem;
            color: #666;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .filter-container {
            padding: 20px;
            background: #f8f9fa;
            margin-bottom: 20px;
        }

        .loading-spinner {
            display: none;
            width: 50px;
            height: 50px;
            margin: 20px auto;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        /* No Results Message */
        .no-results {
            text-align: center;
            padding: 40px;
            color: #666;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <!-- Search Box -->
        <div class="search-container">
            <i class="fas fa-search search-icon"></i>
            <input type="text" id="searchInput" class="search-input" placeholder="Search for restaurants or cuisines...">
        </div>

        <!-- Cuisine Filters -->
        <div class="d-flex flex-wrap" id="cuisineContainer">
            <!-- Cuisines will be loaded here -->
        </div>

        <!-- Active Filters -->
        <div class="filters" id="activeFilters">
            <!-- Active filters will appear here -->
        </div>

        <!--Recommended Food Section-->
        <h2 class="section-title">Recommended Food</h2>
        <div class="filter-container">
            <div class="row">
                <div class="col-md-4">
                    <select id="restaurantFilter" class="form-select">
                        <option value="0">All Restaurants</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search menu items...">
                </div>
                <div class="col-md-4">
                    <button id="searchBtn" class="btn btn-primary">Search</button>
                    <button id="resetBtn" class="btn btn-secondary">Reset</button>
                </div>
            </div>
        </div>

        <div id="loadingSpinner" class="loading-spinner"></div>
        <div id="menuContainer" class="menu-container"></div>
        <div id="noResults" style="display:none; text-align:center; padding:40px;">
            <i class="fas fa-utensils fa-4x mb-3"></i>
            <h4>No menu items found</h4>
            <p>Try adjusting your search or filters</p>
        </div>


        <!-- Recommended Restaurants Section -->
        <h2 class="section-title">Recommended Restaurants</h2>
        <div id="loadingSpinner" class="spinner"></div>
        <div id="noResults" class="no-results">
            <i class="fas fa-utensils fa-3x mb-3"></i>
            <h4>No restaurants found</h4>
            <p>Try adjusting your search or filters</p>
        </div>
        <div class="restaurant-grid" id="restaurantGrid">
            <!-- Restaurant cards will be loaded here dynamically -->
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        $(document).ready(function () {
            let allMenuItems = [];
            let allRestaurants = [];
            let currentRestaurantId = 0;

            // Load cuisines
            $.ajax({
                url: '/DeliveryItem/GetAllCuisines',
                method: 'GET',
                success: function (data) {
                    data.forEach(function (cuisine) {
                        $('#cuisineContainer').append(
                            `<div class="cuisine-btn" data-id="${cuisine.cuisine_id}">${cuisine.cuisine_name}</div>`
                        );
                    });
                }
            });

            // Load recommended restaurants initially
            loadRecommendedRestaurants();
             // Initialize the page
            loadRestaurants();
            loadAllMenuItems();

            // Event listeners
            $('#restaurantFilter').change(function() {
                currentRestaurantId = parseInt($(this).val());
                filterMenuItems();
            });

            $('#searchBtn').click(function() {
                filterMenuItems();
            });

            $('#searchInput').keypress(function(e) {
                if (e.which === 13) { // Enter key
                    filterMenuItems();
                }
            });

            $('#resetBtn').click(function() {
                $('#restaurantFilter').val(0);
                $('#searchInput').val('');
                currentRestaurantId = 0;
                filterMenuItems();
            });

            // Load all restaurants for filter dropdown
            function loadRestaurants() {
                $.ajax({
                    url: '/api/menu/restaurants',
                    method: 'GET',
                    beforeSend: showLoading,
                    success: function(data) {
                        allRestaurants = data;
                        populateRestaurantFilter(data);
                    },
                    complete: hideLoading
                });
            }

            // Load all menu items
            function loadAllMenuItems() {
                $.ajax({
                    url: '/api/menu/all',
                    method: 'GET',
                    beforeSend: showLoading,
                    success: function(data) {
                        allMenuItems = data;
                        displayMenuItems(data);
                    },
                    complete: hideLoading
                });
            }

            // Populate restaurant filter dropdown
            function populateRestaurantFilter(restaurants) {
                const $filter = $('#restaurantFilter');
                $filter.empty();
                $filter.append('<option value="0">All Restaurants</option>');

                restaurants.forEach(restaurant => {
                    $filter.append(`<option value="${restaurant.id}">${restaurant.name}</option>`);
                });
            }

            // Filter menu items based on selected restaurant and search term
            function filterMenuItems() {
                showLoading();

                const searchTerm = $('#searchInput').val().toLowerCase();

                if (currentRestaurantId === 0) {
                    // Filter from all menu items
                    const filtered = allMenuItems.filter(item =>
                        item.name.toLowerCase().includes(searchTerm) ||
                        item.description.toLowerCase().includes(searchTerm)
                    );
                    displayMenuItems(filtered);
                } else {
                    // Fetch menu items for specific restaurant
                    $.ajax({
                        url: `/api/menu/by-restaurant/${currentRestaurantId}`,
                        method: 'GET',
                        success: function(data) {
                            const filtered = data.filter(item =>
                                item.name.toLowerCase().includes(searchTerm) ||
                                item.description.toLowerCase().includes(searchTerm)
                            );
                            displayMenuItems(filtered);
                        },
                        complete: hideLoading
                    });
                }
            }

            // Display menu items in the container
            function displayMenuItems(items) {
                const $container = $('#menuContainer');
                $container.empty();

                if (items.length === 0) {
                    $('#noResults').show();
                    hideLoading();
                    return;
                }

                $('#noResults').hide();

                items.forEach(item => {
                    const restaurant = allRestaurants.find(r => r.id === item.restaurantId) || {};

                    $container.append(`
                        <div class="menu-card">
                            ${item.image ? `<img src="data:image/jpeg;base64,${item.image}" class="menu-img" alt="${item.name}">` : ''}
                            <div class="menu-body">
                                <h5 class="menu-title">${item.name}</h5>
                                <p>${item.description}</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="menu-price">$${item.price.toFixed(2)}</span>
                                    <button class="btn btn-sm btn-primary ${item.isAvailable ? '' : 'disabled'}">
                                        ${item.isAvailable ? 'Add to Cart' : 'Not Available'}
                                    </button>
                                </div>
                                <div class="restaurant-info">
                                    <strong>${restaurant.name || ''}</strong><br>
                                    ${restaurant.cuisine || ''}
                                </div>
                            </div>
                        </div>
                    `);
                });

                hideLoading();
            }

            function showLoading() {
                $('#loadingSpinner').show();
                $('#menuContainer').hide();
            }

            function hideLoading() {
                $('#loadingSpinner').hide();
                $('#menuContainer').show();
            }

            // Cuisine filter click handler
            $('#cuisineContainer').on('click', '.cuisine-btn', function () {
                $(this).toggleClass('active');
                filterRestaurants();
            });

            // Search input handler with debounce
            let searchTimer;
            $('#searchInput').on('input', function() {
                clearTimeout(searchTimer);
                searchTimer = setTimeout(() => {
                    filterRestaurants();
                }, 500);
            });

            // Function to load recommended restaurants
            function loadRecommendedRestaurants() {
                showLoading();
                $.ajax({
                    url: '/DeliveryItem/RecommendedRestaurants',
                    method: 'GET',
                    success: function (data) {
                        displayRestaurants(data);
                    },
                    error: function() {
                        showNoResults();
                    }
                });
            }

            // Function to filter restaurants based on active filters and search
            function filterRestaurants() {
                showLoading();

                const activeCuisines = [];
                $('.cuisine-btn.active').each(function() {
                    activeCuisines.push($(this).data('id'));
                });

                const searchTerm = $('#searchInput').val().trim();

                if (activeCuisines.length === 0 && searchTerm === '') {
                    loadRecommendedRestaurants();
                    return;
                }

                if (activeCuisines.length > 0) {
                    // Filter by first active cuisine (you can modify to handle multiple)
                    $.ajax({
                        url: '/DeliveryItem/GetRestaurantsByCuisine',
                        method: 'GET',
                        data: { cuisineId: activeCuisines[0] },
                        success: function(data) {
                            if (searchTerm !== '') {
                                data = data.filter(restaurant =>
                                    restaurant.restaurantName.toLowerCase().includes(searchTerm.toLowerCase()) ||
                                    restaurant.cuisineName.toLowerCase().includes(searchTerm.toLowerCase())
                                );
                            }
                            displayRestaurants(data);
                        },
                        error: function() {
                            showNoResults();
                        }
                    });
                } else if (searchTerm !== '') {
                    $.ajax({
                        url: '/DeliveryItem/SearchRestaurants',
                        method: 'GET',
                        data: { term: searchTerm },
                        success: function(data) {
                            displayRestaurants(data);
                        },
                        error: function() {
                            showNoResults();
                        }
                    });
                }
            }

            // Function to display restaurants in the grid
            function displayRestaurants(restaurants) {
                $('#restaurantGrid').empty();

                if (restaurants.length === 0) {
                    showNoResults();
                    return;
                }

                hideNoResults();

                restaurants.forEach(restaurant => {
                    const isOpen = Math.random() > 0.3; // Replace with actual opening hours check
                    const distance = (Math.random() * 10).toFixed(1);

                    $('#restaurantGrid').append(`
                        <div class="restaurant-card">
                            <img src="data:image/jpeg;base64,${restaurant.restaurantImageBase64 || ''}" alt="${restaurant.restaurantName}">
                            <div class="card-body">
                                <h5 class="card-title">${restaurant.restaurantName}</h5>
                                <p class="card-text">${restaurant.cuisineName}</p>
                                <p class="card-text">${restaurant.address}</p>
                                <div class="rating">
                                    <span class="stars">${getStarRating(restaurant.rating)}</span>
                                    <span>${restaurant.rating.toFixed(1)}</span>
                                </div>
                                <p class="card-text">${restaurant.priceRange}</p>
                                <p class="status ${isOpen ? 'open' : 'closed'}">
                                    ${isOpen ? 'Open Now' : 'Closed'} • ${distance} km away
                                </p>
                            </div>
                        </div>
                    `);
                });
            }

            // Helper function to create star rating
            function getStarRating(rating) {
                const fullStars = Math.floor(rating);
                const halfStar = rating % 1 >= 0.5 ? 1 : 0;
                const emptyStars = 5 - fullStars - halfStar;

                let stars = '';
                for (let i = 0; i < fullStars; i++) stars += '<i class="fas fa-star"></i>';
                if (halfStar) stars += '<i class="fas fa-star-half-alt"></i>';
                for (let i = 0; i < emptyStars; i++) stars += '<i class="far fa-star"></i>';

                return stars;
            }

            function showLoading() {
                $('#loadingSpinner').show();
                $('#noResults').hide();
            }

            function hideLoading() {
                $('#loadingSpinner').hide();
            }

            function showNoResults() {
                hideLoading();
                $('#noResults').show();
                $('#restaurantGrid').empty();
            }

            function hideNoResults() {
                hideLoading();
                $('#noResults').hide();
            }
        });
    </script>
</body>
</html>