@{
    Layout = "_AdminLayout";
}
@model Foodie.ViewModels.feedbackViewModel

<head>
    <title>@ViewBag.Title</title>
</head>

<div class="container my-5">
    <div class="text-center mb-4">
        <h1 class="display-5 fw-bold">Feedback </h1>
        
    </div>

    <div class="row row-cols-1 row-cols-md-3 g-4 mb-4" id="div1">
        <!-- Buttons will be appended here as cards -->
    </div>

    <div id="customer" class="table-responsive shadow p-3 mb-4 bg-white rounded d-none">
        <h4 class="text-center text-secondary mb-3">Customer Feedback</h4>
        <table class="table table-striped table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Customer Feedback Id</th>
                    <th>Customer Name</th>
                    <th>Restaurant Name</th>
                    <th>Rating</th>
                    <th>Description</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var feedback in Model.tbl_customer_Feedback)
                {
                    <tr>
                        <td>@feedback.cust_feedback_id</td>
                        <td>@feedback.customer_name</td>
                        <td>@feedback.restaurant_name</td>
                        <td>@feedback.rating</td>
                        <td>@feedback.feedback_description</td>
                        <td>@feedback.createdAt</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="restaurant" class="table-responsive shadow p-3 mb-4 bg-white rounded d-none">
        <h4 class="text-center text-secondary mb-3">Restaurant Feedback</h4>
        <table class="table table-striped table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Vendor Feedback Id</th>
                    <th>Restaurant Name</th>
                    <th>Rating</th>
                    <th>Description</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var feedback in Model.tbl_Vendor_Feedback)
                {
                    <tr>
                        <td>@feedback.vendore_feedback_id</td>
                        <td>@feedback.restaurant_name</td>
                        <td>@feedback.rating</td>
                        <td>@feedback.feedback_description</td>
                        <td>@feedback.createdAt</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="delivery" class="table-responsive shadow p-3 mb-4 bg-white rounded d-none">
        <h4 class="text-center text-secondary mb-3">Delivery Partner Feedback</h4>
        <table class="table table-striped table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>Delivery Feedback Id</th>
                    <th>Partner Name</th>
                    <th>Rating</th>
                    <th>Description</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var feedback in Model.tbl_Delivery_Feedback)
                {
                    <tr>
                        <td>@feedback.delivery_feedback_id</td>
                        <td>@feedback.partner_id</td>
                        <td>@feedback.rating</td>
                        <td>@feedback.feedback_description</td>
                        <td>@feedback.createdAt</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function hideTables() {
        document.getElementById('customer').classList.add("d-none");
        document.getElementById('restaurant').classList.add("d-none");
        document.getElementById('delivery').classList.add("d-none");
    }

    function showTable(tableId) {
        hideTables();
        document.getElementById(tableId).classList.remove("d-none");
    }

    function createButton(id, text, handler) {
        const col = document.createElement("div");
        col.classList.add("col");

        col.innerHTML = `
            <div class="card h-100 shadow-sm border-primary">
                <div class="card-body text-center d-flex flex-column justify-content-center">
                    <h5 class="card-title text-capitalize">${text} Feedback</h5>
                    <button id="${id}" class="btn btn-outline-primary mt-2">${text}</button>
                </div>
            </div>
        `;
        document.getElementById("div1").appendChild(col);
        col.querySelector('button').addEventListener("click", handler);
    }

    document.addEventListener("DOMContentLoaded", function () {
        const role = '@Context.Session.GetString("role")';

        switch (role) {
            case "1":
                createButton("restaurant1", "Restaurant", () => showTable('restaurant'));
                createButton("customer1", "Customer", () => showTable('customer'));
                createButton("delivery1", "Delivery", () => showTable('delivery'));
                break;
            case "2":
                showTable('restaurant');
                break;
            case "3":
                showTable('customer');
                break;
            case "4":
                showTable('delivery');
                break;
            default:
                hideTables();
                break;
        }
    });
</script>
