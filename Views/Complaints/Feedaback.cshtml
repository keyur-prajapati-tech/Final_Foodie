@{
    Layout = "_AdminLayout";
}
@model Foodie.ViewModels.feedbackViewModel
<head>
    <title>@ViewBag.Title</title>
</head>
<div class="text-center">
    <h1>FeedBack</h1>
</div>

<div class="container shadow">
    <div class="border-2">
        <div id="div1" class="mt-1 mb-1 pt-3 ps-4 pb-3 shadow">
        </div>

        <div id="customer" class="table-responsive border-4" style="display:none;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Customer Feedback Id</th>
                        <th scope="col">Customer Name</th>
                        <th scope="col">Restaurant Name</th>
                        <th scope="col">Rating</th>
                        <th scope="col">Description </th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var feedback in Model.tbl_customer_Feedback)
                    {
                        <tr>
                            <th scope="row">@feedback.cust_feedback_id</th>
                            <td scope="col">@feedback.customer_id</td>
                            <td scope="col">@feedback.restaurant_id</td>
                            <td scope="col">@feedback.rating</td>
                            <td scope="col">@feedback.feedback_description</td>
                            <td scope="col">@feedback.createdAt</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="restaurant" class="table-responsive border-4" style="display:none;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Vendor Feedback Id</th>
                        <th scope="col">Restaurant name</th>
                        <th scope="col">Rating</th>
                        <th scope="col">Description </th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var feedback in Model.tbl_Vendor_Feedback)
                    {
                        <tr>
                            <th scope="row">@feedback.vendore_feedback_id</th>
                            <td scope="col">@feedback.restaurant_id</td>
                            <td scope="col">@feedback.rating</td>
                            <td scope="col">@feedback.feedback_description</td>
                            <td scope="col">@feedback.createdAt</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="delivery" class="table-responsive border-4" style="display:none;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Delivery Feedback Id</th>
                        <th scope="col">Partner name</th>
                        <th scope="col">Rating</th>
                        <th scope="col">Description </th>
                        <th scope="col">Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var feedback in Model.tbl_Delivery_Feedback)
                    {
                        <tr>
                            <th scope="row">@feedback.delivery_feedback_id</th>
                            <td scope="col">@feedback.partner_id</td>
                            <td scope="col">@feedback.rating</td>
                            <td scope="col">@feedback.feedback_description</td>
                            <td scope="col">@feedback.createdAt</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <script>
            // Function to hide all tables
            function hideTables() {
                document.getElementById('customer').style.display = 'none';
                document.getElementById('restaurant').style.display = 'none';
                document.getElementById('delivery').style.display = 'none';
            }

            // Function to show a specific table
            function showTable(tableId) {
                hideTables(); // Hide all tables
                document.getElementById(tableId).style.display = 'block';  // Show the selected table
            }

            // On page load, check the user's role and show the relevant table
            document.addEventListener("DOMContentLoaded", function () {

                const role = '@Context.Session.GetString("role")'; // Assuming you're fetching the role from the session

                // Check role and display the relevant table
                switch (role) {
                    case "1":

                    createButton("restaurant1","restaurant",()=>showTable('restaurant'));
                    createButton("customer1","customer",()=>showTable('customer'));
                    createButton("delivery1","delivery",()=>showTable('delivery'));

                    break;
                    case "2":
                    // createButton("restaurant","restaurant",showTable('restaurant'));
                        showTable('restaurant'); // Directly show customer table when role is 2
                        break;

                    case "3":
                        showTable('customer'); // Directly show customer table when role is 2
                        break;
                    case "4":
                        showTable('delivery'); // Show delivery table
                        break;
                    default:
                        hideTables(); // Hide all tables if no valid role
                        break;
                }
            });
             function createButton(id,text,handler){
                    let button = document.createElement("button");
                    button.id=id;
                    button.innerText = text;
                    button.classList.add("btn", "btn-outline-primary");
                    button.addEventListener("click",handler);
                    document.getElementById("div1").appendChild(button);
              }

        </script>
    </div>
</div>
